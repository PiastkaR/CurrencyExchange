package com.nn.application.service;

import com.nn.domain.dto.CreateAccountRequest;
import com.nn.domain.model.Account;
import com.nn.domain.model.AccountBuilder;
import com.nn.domain.service.ExchangeService;
import com.nn.infra.api.NBPApiService;
import com.nn.infra.repository.JpaAccountRepository;
import jakarta.transaction.Transactional;
import org.springframework.stereotype.Service;

import java.math.BigDecimal;

@Service
public class AccountService {
    private final JpaAccountRepository jpaAccountRepository;
    private final ExchangeService exchangeService;

    public AccountService(JpaAccountRepository jpaAccountRepository, ExchangeService exchangeService) {
        this.jpaAccountRepository = jpaAccountRepository;
        this.exchangeService = exchangeService;
    }

    /**
     * @return Account with autogenerated id
     **/
    public Account createAccount(CreateAccountRequest request) {
        Account account = AccountMapper.toEntity(request);

        return jpaAccountRepository.save(account);
    }

    @Transactional
    public Account getAccount(Long id) {
        return jpaAccountRepository.getById(id);
    }

    @Transactional
    public Account exchangeCurrency(Long accountId, BigDecimal amount, String fromCurrency, String toCurrency) {
        Account account = exchangeService.exchange(getAccount(accountId), amount, fromCurrency, toCurrency);
        return jpaAccountRepository.save(account);
    }

}
